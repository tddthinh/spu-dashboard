{"version":3,"sources":["data.js","App.js","reportWebVitals.js","index.js"],"names":["members","assigned","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","RandBoard","props","state","currentMember","isSetup","timer","delay","isRandoming","ms","Promise","resolve","setTimeout","items","this","length","setState","i","rand","Math","floor","random","sleep","e","target","name","value","delayedRandom","then","handleRandomClick","id","className","disabled","onClick","type","handleClickSetupCheckbox","hidden","htmlFor","min","max","onChange","handleChange","React","Component","ResultBoard","teams","rows","ths","map","team","idx","arrTemp","Array","fill","tableObj","trs","rowObj","tds","keyIdx","teamName","memName","randoms","toString","push","team_members","ExcelExport","element","data","label","TopBoard","SPUPlayerRandomer","console","log","currentIdx","currentListIdx","rmv_e","_","remove","n","unshift","split","cols","join","handleMemberListChange","readOnly","App","useEffect","document","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.974c17ee.chunk.js","sourcesContent":["export default {\r\n    members: [\r\n        [\r\n            '1\tAn Chun',\r\n            '2\tAn Khang',\r\n            '3\tAnh Khoa',\r\n            '4\tAnh Vũ',\r\n        ],\r\n        [\r\n            '5\tBảo Lê',\r\n            '6\tCông Phúc',\r\n            '7\tDương Quang',\r\n            '8\tDuy Cẩn',\r\n            '9\tHải Sơn',\r\n            '10\tHoàng Anh',\r\n        ],\r\n        [\r\n            '11\tHoàng Giang',\r\n            '12\tHoàng Hải',\r\n            '13\tHoàng Quang',\r\n            '14\tHữu Tài',\r\n            '19\tNguyễn Dương',\r\n            '25\tPhương Quang',\r\n            '31\tThành Tâm',\r\n            '20\tNguyên Khánh',\r\n            '26\tQuốc Anh',\r\n            '32\tThiên Triệu',\r\n            '15\tKhánh An',\r\n            '21\tNguyễn Minh',\r\n            '27\tQuốc Khánh',\r\n            '33\tTiến Nguyễn',\r\n            '16\tLâm Bùi',\r\n            '22\tPhạm Thanh',\r\n            '28\tQuốc Thơm',\r\n        ],\r\n        [\r\n            '34\tTrí Dương',\r\n            '17\tLâm Thành',\r\n            '23\tPhùng Khánh',\r\n            '29\tSong Sơn',\r\n            '35\tTrọng Nghĩa',\r\n            '18\tMinh Kiên',\r\n            '24\tPhùng Thiên',\r\n            '30\tHuỳnh Phương',\r\n            '36\tVĩnh Thông',\r\n        ]\r\n    ],\r\n    assigned: []\r\n}","import './App.css';\nimport data from './data';\nimport React, { useEffect }  from 'react';\nimport _ from 'lodash';\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nclass RandBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMember: '',\n      isSetup: false,\n      timer: 5,\n      delay: 50,\n      isRandoming: false\n    }\n  }\n  sleep(ms) {\n    return new Promise(\n      resolve => setTimeout(resolve, ms)\n    );\n  }\n  async delayedRandom() {\n    const items = this.props.members;\n    if (items.length < 1) {\n      return null;\n    }\n    this.setState({ isRandoming: true });\n    const timer = (this.state.timer * 1000) / this.state.delay;\n    for (let i = 1; i <= timer; i++) {\n      var rand = Math.floor(Math.random() * items.length);\n      this.setState({\n        currentMember: items[rand]\n      })\n      await this.sleep(this.state.delay);\n    }\n    this.setState({ isRandoming: false });\n    return rand;\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleClickSetupCheckbox() {\n    this.setState((state, props) => ({\n      isSetup: !state.isSetup\n    }));\n  }\n  handleRandomClick() {\n    this.delayedRandom().then((value) => { this.props.handleRandomClick(value) });\n  }\n  render() {\n\n    return (\n      <div id=\"randBoard\">\n        <span>{this.props.members.length} member(s) left&nbsp;</span>\n        <div>\n          <button className={\"buttonBG skewBtn lorange\"} disabled={this.state.isRandoming} onClick={() => this.handleRandomClick()}>Random..</button>\n        </div>\n        <div id=\"randName\" className={this.state.isRandoming ? \"card cardActive\" : \"card\"}>\n          <p>Lucky Spin</p>\n          <h2>{this.state.currentMember}</h2>\n        </div>\n        <br></br>\n        <span>Random Setup&nbsp;</span>\n        <span>\n          <input type=\"checkbox\" value={this.state.isSetup} onClick={() => this.handleClickSetupCheckbox()} />\n        </span>\n        <br></br>\n        <div hidden={!this.state.isSetup}>\n          <label htmlFor=\"timer\">Timer (sec) </label>\n          <input type=\"number\" min=\"1\" max=\"10\" name=\"timer\" id=\"timer\" value={this.state.timer} onChange={(e) => this.handleChange(e)} /><br></br>\n          <label htmlFor=\"delay\">Delay (msec) </label>\n          <input type=\"number\" min=\"30\" max=\"150\" name=\"delay\" id=\"delay\" value={this.state.delay} onChange={(e) => this.handleChange(e)} /><br></br>\n        </div>\n        <br></br>\n        <br></br>\n      </div>\n    );\n  }\n}\nclass ResultBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teams: ['A', 'B', 'C', 'D', 'E', 'F'],\n      rows: 6\n    }\n  }\n  render() {\n    const ths = this.state.teams.map((team, idx) => {\n      return <th key={idx + 1}>{team}</th>\n    })\n    const arrTemp = new Array(this.state.rows).fill(\"\");\n    const length = this.state.rows;\n    const tableObj = [];\n    const trs = this.state.teams.map((team, idx) => {\n      const rowObj = {};\n      const tds = arrTemp.map((e, i) => {\n        const keyIdx = i + (idx * length);\n        const teamName = this.state.teams[i];\n        const memName = this.props.randoms[keyIdx].toString();\n        rowObj[teamName] = memName;\n        return <td key={keyIdx}>{this.props.randoms[keyIdx]}</td>\n      })\n      tableObj.push(rowObj);\n      return <tr key={idx + 1}>\n        {tds}\n      </tr>\n    })\n    const assignedList = this.props.assigned;\n    return (<div id=\"resultBoard\">\n      <h1>The 6th SPU Football Season</h1>\n      <table className={\"styled-table\"}>\n        <thead>\n          <tr>\n            {ths}\n          </tr>\n        </thead>\n        <tbody>\n          {trs}\n        </tbody>\n      </table>\n      <ExcelExport team_members={tableObj}></ExcelExport>\n    </div>\n    );\n  }\n}\nclass ExcelExport extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <ExcelFile element={<button className={\"buttonBG skewBtn lorange\"} id=\"excelExport\">Excel Export</button>}>\n        <ExcelSheet data={this.props.team_members} name=\"SPU Team Members\">\n          <ExcelColumn label=\"A\" value=\"A\" />\n          <ExcelColumn label=\"B\" value=\"B\" />\n          <ExcelColumn label=\"C\" value=\"C\" />\n          <ExcelColumn label=\"D\" value=\"D\" />\n          <ExcelColumn label=\"E\" value=\"E\" />\n          <ExcelColumn label=\"F\" value=\"F\" />\n        </ExcelSheet>\n      </ExcelFile>\n    );\n  }\n}\n\nclass TopBoard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div id=\"topBoard\">\n        <RandBoard members={this.props.members} handleRandomClick={this.props.handleRandomClick}>\n        </RandBoard>\n        <ResultBoard assigned={this.props.assigned} randoms={this.props.randoms}>\n        </ResultBoard>\n      </div>\n    );\n  }\n}\nclass SPUPlayerRandomer extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.data.members);\n    this.state = {\n      data: this.props.data,\n      randoms: new Array(36).fill(\"\"),\n      currentIdx: 0,\n      currentListIdx: 0\n    }\n  }\n  handleRandomClick(idx, e) {\n    if (idx === null) {\n      if (!this.state.currentListIdx < this.state.data.members.length - 1) {\n        return;\n      }\n    }\n    const rmv_e = _.remove(this.state.data.members[this.state.currentListIdx], function (n, i) {\n      return i === idx;\n    });\n    this.state.data.assigned.unshift(rmv_e);\n    this.state.randoms[this.state.currentIdx] = rmv_e;\n    this.setState((state) => ({ currentIdx: state.currentIdx + 1 }));\n    if (this.state.currentListIdx < this.state.data.members.length - 1 && this.state.data.members[this.state.currentListIdx].length === 0) {\n      this.setState((state) => ({ currentListIdx: this.state.currentListIdx + 1 }))\n    }\n  }\n  handleMemberListChange(idx, e) {\n    this.state.data.members[idx] = e.target.value.split(\"\\n\")\n    this.setState({\n    });\n  }\n  render() {\n    return (\n      <div>\n        <TopBoard members={this.state.data.members[this.state.currentListIdx]} handleRandomClick={(id) => this.handleRandomClick(id)} randoms={this.state.randoms}></TopBoard>\n        <div id=\"randList\">\n          <div id=\"memberList1\" className={\"labelList memberList\"}>\n            <p>1st Mems List</p>\n            <textarea rows=\"10\" cols=\"35\" value={this.state.data.members[0].join(\"\\n\")} onChange={(e) => this.handleMemberListChange(0, e)}>\n            </textarea>\n          </div>\n          <div id=\"memberList2\" className={\"labelList memberList\"}>\n            <p>2nd Mems List</p>\n            <textarea rows=\"10\" cols=\"35\" value={this.state.data.members[1].join(\"\\n\")} onChange={(e) => this.handleMemberListChange(1, e)}>\n            </textarea>\n          </div>\n          <div id=\"memberList3\" className={\"labelList memberList\"}>\n            <p>3rd Mems List</p>\n            <textarea rows=\"10\" cols=\"35\" value={this.state.data.members[2].join(\"\\n\")} onChange={(e) => this.handleMemberListChange(2, e)}>\n            </textarea>\n          </div>\n          <div id=\"memberList4\" className={\"labelList memberList\"}>\n            <p>4th Mems List</p>\n            <textarea rows=\"10\" cols=\"35\" value={this.state.data.members[3].join(\"\\n\")} onChange={(e) => this.handleMemberListChange(3, e)}>\n            </textarea>\n          </div>\n          <div id=\"assignedList\" className={\"labelList memberList\"}>\n            <p>Assigned Mems List</p>\n            <textarea rows=\"15\" cols=\"35\" value={this.state.data.assigned.join(\"\\n\")} readOnly={true}></textarea>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst App = () => {\n  // This effect runs once, after the first render\n  useEffect(() => {\n    document.title = \"SPU Dashboard\"\n  }, [])\n  \n  return <SPUPlayerRandomer data={data}></SPUPlayerRandomer>\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}